[tool.poetry]
name = "p4a_dev"
version = "0.0.1"
description = "P4A Kivy/KivyMD Developer sample & tools."
authors = ["BlackCatDevel0per <bcdev@mail.ru>"]
license = "Apache 2.0"

packages = [
    { include = "app", from = "src" },
]

[tool.poetry.urls]
Homepage = "https://github.com/BlackCatDevel0per/p4adev_toolkit"
Documentation = "https://github.com/BlackCatDevel0per/p4adev_toolkit"
Repository = "https://github.com/BlackCatDevel0per/p4adev_toolkit"

# TODO: Execute without wait to end (poetry will closed while task is pending)
# List commands with `poetry user-commands`
[tool.poetry-plugin-commands]
stree = "tree src"
run-app = "PYTHONPATH=src:. .venv/bin/python src/app_launch/main.py"
run-app-rd = "DEBUG_ACCESS_APP=1 PYTHONPATH=src:. .venv/bin/pythonpython src/app_launch/main.py"

build-debug = "bash -c 'scripts/build.sh debug dev'"
# Remove built app & build again
rebuild-app-debug = "rm -rf .buildozer/android/platform/build-armeabi-v7a/build/other_builds/app && bash -c 'scripts/build.sh debug dev'"
rebuild-debug = "bash -c 'scripts/clean_build.sh debug dev'"

build-release = "bash -c 'scripts/clean_build.sh release app'"

[tool.ruff]
line-length = 100
select = [
	"RUF",
	"FBT",
	"FURB",
	"PERF",
	"TRY",
	"FLY",
	"YTT",
	"PIE",
	# "PYI",  # For stub files
	"TCH",
	"FA",
	"UP",
	"EM",
	"PL",
	"G",  # NOTE: CONF!
	"INP",
	"PT",
	"DJ",
	"NPY",
	"PD",
	"ERA",
	"ARG",
	"INT",
	"TID",
	"SIM",
	"SLOT",
	"RET",
	"RSE",
	"SLF",
	"T20",
	"Q",
	"ISC",
	"BLE",
	"DTZ",
	"COM",
	"C4",
	"A",
	"PTH",
	"FIX",
	"TD",
	"ANN",
	"S",
	"ASYNC",
	"D",
	"N",

	"C",
	"I",
	# Pycodestyle
	"E",
	# Pyflakes
	"F",
	"B",
	"W",
	# isort
	# "I001"
]

ignore = [
	"W191", "D206", "RET502",
	"UP040",  # New type aliases (type hinting)
	"UP037",  # Ignore quoted type annotations for properly work cython 0.29.37..
	"PTH123",  # Not good solution for all things..
	"TD001",
	"TD002",
	"TD003",
	"S101",
]  # Add RET503?

src = ["src/app", "tests", "scripts"]

exclude = [
    ".git",
    "build",
    "dist",
    "venv",
    ".venv",
    "docs",
    "tests",
    "dev",
    "*.egg-info",
]
target-version = "py310"

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.format]
indent-style = "tab"


[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"


# Why? Why not?))
[tool.poetry-plugin-deps-juice]
"poetry" = [
	"app-gui",
	"app-io"
]


[tool.poetry.group.app-gui]
optional = false

[tool.poetry.group.app-gui.dependencies]
kivy = {extras = ["base"], version = "^2.2.1"}
kivymd = {git = "https://github.com/kivymd/KivyMD", rev = "1152d3c31229b357336cb9e19cfaa2ba8c6941bc"}  # Before 2.0.0 aka before move to md3
kivymd2-widgets = "^0.0.3"
asynckivy = "^0.6.2"
kivmob = "^2.0"

[tool.poetry.group.app-io]
optional = false

[tool.poetry.group.app-io.dependencies]
p4adev-tools = "^0.0.3"

plyer = "^2.1.0"
pyslet = "^0.7.20170805"
aiofiles = "^23.2.1"
pyscopedstorage = "^0.0.3"

[tool.poetry.group.poetry-plugins]
optional = true

[tool.poetry.group.poetry-plugins.dependencies]
poetry-plugin-commands = "^0.0.9"
poetry-plugin-deps-juice = "^0.0.3"

# TODO: Cut to sub-groups..
[tool.poetry.group.dev]
optional = false

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
pytest-dependency = "^0.5.1"
ruff = "^0.0.292"
# TODO: Nuitka..?
# NOTE: Better use from git link directly~
buildozer = {git = "https://github.com/BlackCatDevel0per/buildozer"}
# TODO: Fork & cache downloads..
python-for-android = {url = "https://github.com/BlackCatDevel0per/python-for-android/archive/refs/heads/master.zip"}
p4adev_recipes = "^0.0.3"
cython = {git = "https://github.com/BlackCatDevel0per/cython"}
build = "^1.0.3"
setuptools = "^69.0.3"
wheel = "^0.42.0"
kivy-examples = "^2.3.0"
faker = "^22.6.0"
pyftpdlib = "^1.5.9"
watchdog = "^4.0.0"
regex = "^2023.12.25"
cachetools = "^5.3.2"
ftputil = "^5.1.0"
pyperclip = "^1.8.2"
installer = "^0.7.0"
ipykernel = "^6.29.4"
ipython = "8.12.3"
background-zmq-ipython = "^1.20220901.135250"
pyzmq = "25.1.1"
jedi = "0.19.1"
poetry-plugin-commands = "^0.0.9"
mypy = {extras = ["mypyc"], version = "^1.9.0"}

[tool.poetry.group.performance]
optional = true

[tool.poetry.group.performance.dependencies]
ujson = "^5.9.0"

[tool.poetry.group.other.dependencies]
rich = "^13.7.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.cython]
force = true

